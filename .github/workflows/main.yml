name: Build APK

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install Android SDK 34
      run: |
        sdkmanager "platforms;android-34" "build-tools;34.0.0"
        # Vérifier l'installation de zipalign
        ls -la $ANDROID_HOME/build-tools/34.0.0 | grep zipalign || echo "zipalign not found"
        # Afficher le chemin de l'Android SDK pour débogage
        echo "ANDROID_HOME is set to $ANDROID_HOME"

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Cordova
      run: npm install -g cordova@12.0.0

    - name: Clean old Cordova project
      run: rm -rf nms-app

    - name: Create Cordova project
      run: cordova create nms-app com.nmstrading.app "NMS Trading"

    - name: Copy files
      run: |
        mkdir -p nms-app/www
        cp index.html nms-app/www/
        cp app.js nms-app/www/
        cp style.css nms-app/www/
        cp config.xml nms-app/

    - name: Add Android platform
      working-directory: ./nms-app
      run: |
        cordova platform add android
        cordova prepare android

    - name: Build Android APK
      working-directory: ./nms-app
      run: cordova build android --release -- --packageType=apk

    - name: Generate and Sign APK
      working-directory: ./nms-app
      run: |
        # Définir le chemin explicite pour zipalign
        ZIPALIGN=$ANDROID_HOME/build-tools/34.0.0/zipalign
        # Vérifier si zipalign existe
        if [ ! -f "$ZIPALIGN" ]; then echo "zipalign not found at $ZIPALIGN"; exit 1; fi
        # Générer une clé temporaire
        keytool -genkey -v -keystore temp.keystore -alias testalias -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Test, OU=Test, O=Test, L=Test, S=Test, C=US" -storepass testpass -keypass testpass
        # Signer l'APK
        jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA256 -keystore temp.keystore -storepass testpass -keypass testpass platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk testalias
        # Copier l'APK signé pour upload
        cp platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk platforms/android/app/build/outputs/apk/release/app-release-signed.apk
        # Aligner l'APK
        $ZIPALIGN -v 4 platforms/android/app/build/outputs/apk/release/app-release-signed.apk platforms/android/app/build/outputs/apk/release/app-release.apk

    - name: Upload APKs
      uses: actions/upload-artifact@v4
      with:
        name: nms-trading-apks
        path: |
          nms-app/platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk
          nms-app/platforms/android/app/build/outputs/apk/release/app-release-signed.apk
          nms-app/platforms/android/app/build/outputs/apk/release/app-release.apk
